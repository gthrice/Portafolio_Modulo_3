Evaluación de portafolio
Instrucciones

En función de tu proyecto personal previamente establecido, deberás implementar clase a clase las diferentes tecnologías y competencias técnicas adquiridas a lo largo del curso.

Recuerda que este proyecto irá directamente al registro de evidencia de tu portafolio, el cual deberá demostrar el dominio, competencias técnicas y diferentes habilidades relacionadas con el desarrollo de programas en el lenguaje Python.

Requerimientos Funcionales Mínimos Esperados

Utilizar los conceptos fundamentales del lenguaje Python para la construcción de programas.

Crear un programa que implemente variables, operadores y estructuras básicas del lenguaje Python.

Ejemplo: Un conversor de unidades (temperatura, monedas, longitudes).

Distinguir los tipos de datos y sentencias básicas del lenguaje para la construcción de programas.

Desarrollar un script que haga uso de distintos tipos de datos como cadenas, enteros, flotantes y booleanos.

Ejemplo: Un formulario en consola que solicite información del usuario y la almacene en variables adecuadas.

Utilizar sentencias condicionales para el control del flujo de un algoritmo que resuelve un problema simple acorde al lenguaje Python.

Implementar estructuras if, elif, else para la toma de decisiones.

Ejemplo: Un programa que determine si un número es positivo, negativo o cero.

Utilizar sentencias iterativas para la elaboración de un algoritmo que resuelve un problema acorde al lenguaje Python.

Crear un programa que utilice bucles for y while para repetir acciones.

Ejemplo: Un generador de tablas de multiplicar o una calculadora de factoriales.

Utilizar estructuras de datos apropiadas para la elaboración de un algoritmo que resuelve un problema acorde al lenguaje Python.

Implementar listas, diccionarios o tuplas para organizar y manejar datos.

Ejemplo: Un sistema de agenda de contactos con almacenamiento en un diccionario.

Codificar un programa utilizando funciones para la reutilización de código acorde al lenguaje Python.

Modularizar el código mediante funciones que permitan reutilizar lógica dentro del programa.

Ejemplo: Un programa que calcule el área de diferentes figuras geométricas utilizando funciones separadas.

Gestionar el código fuente de un proyecto utilizando GitHub para mantener un repositorio de código remoto seguro y permitir trabajo concurrente.

Crear un repositorio en GitHub donde se almacenen los programas desarrollados.

Mantener un historial de cambios mediante commits con mensajes descriptivos.

Incluir un archivo README.md explicando cada programa.